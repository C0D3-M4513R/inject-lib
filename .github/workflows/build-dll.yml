name: Build dll

on:
  push:
    branches: [staging,trying,dev,main]
    # Remove the line above to run when pushing to master
  pull_request:
    branches: [ main, dev]
  workflow_dispatch:
env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    name: "build-ci-dll"
    needs: ["build"]
    runs-on: ubuntu-latest
    steps:
      - name: Done
        run: exit 0
  build:
    runs-on: windows-latest
    strategy:
      matrix:
        profile: ["dev","release"]
        feature: ["none","std"]
        target: [i686-pc-windows-msvc, i686-pc-windows-gnu ,x86_64-pc-windows-msvc, x86_64-pc-windows-gnu]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
      - uses: actions-rs/cargo@v1
        with:
          command: install
          args: cbindgen
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target ${{ matrix.target }} --profile ${{ matrix.profile }} --feature ${{ matrix.feature }} --package dll-inject
      - name: generate bindings
        working-directory: ./dll-inject
        run: cbindgen --config cbindgen.toml --crate dll-inject --output dll-inject.h

      - name: list dependencies
        uses: actions-rs/cargo@v1
        with:
          command: rustc
          args: -p dll-inject --features ${{ matrix.feature }} -- --print native-static-libs

      - uses: actions/upload-artifact@v3
        name: upload release artifact
        if: ${{ matrix.profile == 'release' }}
        with:
          name: dll-inject-${{ matrix.target}}-release-${{ matrix.feature }}
          path: |
            dll-inject/dll-inject.h
            target/${{ matrix.target }}/release/libdll_inject.*
            target/${{ matrix.target }}/release/dll_inject.*

      - uses: actions/upload-artifact@v3
        name: upload dev artifact
        if: ${{ matrix.profile == 'dev' }}
        with:
          name: dll-inject-${{ matrix.target}}-dev-${{ matrix.feature }}
          path: |
            dll-inject/dll-inject.h
            target/${{ matrix.target }}/debug/dll_inject.*
            target/${{ matrix.target }}/debug/libdll_inject.*
