name: Rust Tests

on:
  push:
    branches: [staging,trying,dev,main]
    # Remove the line above to run when pushing to master
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:
env:
  CARGO_TERM_COLOR: always

jobs:
  ci:
    name: "build-ci"
    needs: ["build", "build-ubuntu"]
    runs-on: ubuntu-latest
    steps:
      - name: Done
        run: exit 0
  build:
    name: "build"
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        profile: [ "dev","release" ]
        toolchain: ["stable"] #"beta" I used beta when it was relevant for the asm! macro.
        features: ['"alloc"','"alloc std"','"alloc x86tox64"','"alloc x86tox64 std"']
        target: [i686-pc-windows-msvc,x86_64-pc-windows-msvc]
        include:
          - profile: "dev"
            flag: "debug"
          - profile: "release"
            flag: "release"
    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-rust@v1
        with:
          cache-target: ${{ matrix.flag }}
          profile: minimal
          channel: ${{ matrix.toolchain }}
          targets: ${{ matrix.target }}
      - name: build
        run: cargo build --no-default-features --profile ${{ matrix.profile }} --features ${{ matrix.features }} --target ${{ matrix.target }} --package inject-lib
      - name: test
        run: cargo test --no-fail-fast --no-default-features --profile ${{ matrix.profile }} --features ${{ matrix.features }} --target ${{ matrix.target }} --package inject-lib

  build-ubuntu:
    name: "build-ubuntu"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        profile: [ "dev","release" ]
        toolchain: [stable]
        include:
          - profile: "dev"
            flag: "debug"
          - profile: "release"
            flag: "release"
    steps:
      - uses: actions/checkout@v4
      - uses: moonrepo/setup-rust@v1
        with:
          cache-target: ${{ matrix.flag }}
          channel: ${{ matrix.toolchain }}
      - name: build
        run: cargo build --no-fail-fast --profile ${{ matrix.profile }} --no-default-features --features "ntdll alloc" --package inject-lib
      - name: test
        run: cargo test --no-fail-fast --profile ${{ matrix.profile }} --no-default-features --features "ntdll alloc" --package inject-lib
