[package]
name = "dll_injector"
version = "0.0.3"
edition = "2018"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

#[target.'cfg(target_os="windows")'.dependencies.winapi]
[dependencies.winapi]
version = "0.3"

features=[
    "winnt",#Various constants/types, used in injection/ejection
    "basetsd",#Types
    "errhandlingapi",#Get Errors
    "tlhelp32",#Find PID/Process Snapshot
    "minwindef",#Types
    "handleapi",#Close handles, which are returned, by other syscalls, buring injection/ejection
    "processthreadsapi",#used in injection/ejection.
    "libloaderapi",#used in injection/ejection.
    "memoryapi",#Allocate,Free and Write Process memory. Used in injection
    "winbase",#Infinity. Used with "synchapi"
    "synchapi",#Wait, until Dll is actually attached.
    "wow64apiset",#determine if proc is running under WOW
    "sysinfoapi",#determine if self is running under WOW
]

[dependencies.ntapi]
version = "0.3"#Types
optional = true

#todo: use less libraries
[dependencies]
pelite = "0.9" #to read/parse dll information.
log = "0.4"
once_cell="1.8"

[build]
target = "x86_64-pc-windows-msvc"

[features]
default=[]
nightly=[]
ntdll=["ntapi"]
x86tox64=["ntdll","nightly"]